/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var o=Object.defineProperty;var c=Object.getOwnPropertyDescriptor;var l=Object.getOwnPropertyNames;var d=Object.prototype.hasOwnProperty;var g=(a,e)=>{for(var t in e)o(a,t,{get:e[t],enumerable:!0})},u=(a,e,t,s)=>{if(e&&typeof e=="object"||typeof e=="function")for(let i of l(e))!d.call(a,i)&&i!==t&&o(a,i,{get:()=>e[i],enumerable:!(s=c(e,i))||s.enumerable});return a};var v=a=>u(o({},"__esModule",{value:!0}),a);var w={};g(w,{default:()=>n});module.exports=v(w);var f=require("obsidian"),n=class extends f.Plugin{async onload(){this.registerEvent(this.app.workspace.on("layout-change",()=>{let e=this.getGraphLeaf();e&&setInterval(()=>{let t=e.view;t!=null&&t.renderer&&this.updateNodeSizes(t)},1)}))}getGraphLeaf(){let e=this.app.workspace.getLeavesOfType("graph");return e.length===1?e.first():null}updateNodeSizes(e){let{renderer:t}=e;t==null||t.nodes.forEach(s=>{var h;let i=this.app.vault.getFileByPath(s.id);if(!i)return;let r=this.app.metadataCache.getFileCache(i),p=(h=r==null?void 0:r.frontmatter)==null?void 0:h.node_size;p&&(s.weight=p)})}};

/* nosourcemap */